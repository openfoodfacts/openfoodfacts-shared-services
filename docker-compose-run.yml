# Used when running locally for ad-hoc testing
services:
  redis:
    ports:
      - ${REDIS_EXPOSE:-127.0.0.1:6379}:6379
    volumes:
      - redisdata:/data
    networks:
      - common_net

  mongodb:
    ports:
      - ${MONGODB_EXPOSE:-127.0.0.1:27017}:27017
    volumes:
      - dbdata:/data/db
      - ./import:/import
    networks:
      - common_net

  postgresql:
    image: ${POSTGRES_IMAGE}
    command: postgres -c shared_buffers=${POSTGRES_SHARED_BUFFERS} -c work_mem=${POSTGRES_WORK_MEM} -c listen_addresses='*'
    restart: ${RESTART_POLICY:-always}
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - PGAUTO_REINDEX=no
    shm_size: ${POSTGRES_SHM_SIZE}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 1s
      timeout: 5s
      retries: 25
    ports:
      - "${POSTGRES_EXPOSE:-127.0.0.1:5432}:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - common_net

  # Note this is only used for local development. In production,
  # central monitoring platform is used to collect metrics
  # and traces: https://github.com/openfoodfacts/openfoodfacts-monitoring
  otel-collector:
    image: docker.io/grafana/otel-lgtm:latest
    environment:
      - GF_PATHS_DATA=/data/grafana
    ports:
      - 127.0.0.1:3000:3000
      - 127.0.0.1:4317:4317
      - 127.0.0.1:4318:4318
    networks:
      - common_net

volumes:
  dbdata:
  redisdata:
  pg_data:

networks:
  common_net:
    external: true
    name: ${COMMON_NET_NAME}
