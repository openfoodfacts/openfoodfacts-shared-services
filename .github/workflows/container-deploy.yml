name: Container Image Deployment CI

on:
  push:
    branches:
      - main
      - deploy-*
    # We don't currently automatically deploy to production so no release tag filters needed
    # tags:
    #   - v*.*.*

# Note on secrets used for connection
# SSH_PRIVATE_KEY is the private key (shared between VM and host)

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        env: [shared-net]
    environment: ${{ matrix.env }}
    concurrency: ${{ matrix.env }}
    steps:
    # Put here non secret variables that change according to environment
    - name: Set various variable for staging (net) deployment
      if: matrix.env == 'shared-net'
      run: |
        # configs
        echo "MONGODB_CACHE_SIZE=14" >> $GITHUB_ENV
        echo "MONGODB_HOST=10.1.0.200" >> $GITHUB_ENV
        # deploy target
        echo "SSH_HOST=10.1.0.200" >> $GITHUB_ENV
        echo "SSH_PROXY_HOST=ovh1.openfoodfacts.org" >> $GITHUB_ENV
        echo "SSH_USERNAME=off" >> $GITHUB_ENV

    - name: Set various variable for prod (org) deployment
      if: matrix.env == 'shared-org'
      run: |
        # FIXME: we do not deploy to prod currently
        false

    - name: Checkout git repository
      uses: appleboy/ssh-action@master
      with:
        host: ${{ env.SSH_HOST }}
        username: ${{ env.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        proxy_host: ${{ env.SSH_PROXY_HOST }}
        proxy_username: ${{ env.SSH_USERNAME }}
        proxy_key: ${{ secrets.SSH_PRIVATE_KEY }}
        script_stop: false
        script: |
          # Clone Git repository if not already there
          [ ! -d '${{ matrix.env }}' ] && git clone --depth 1 https://github.com/${{ github.repository }} ${{ matrix.env }} --no-single-branch 2>&1

          # Go to repository directory
          cd ${{ matrix.env }}

          # Fetch newest commits (in case it wasn't freshly cloned)
          git fetch --depth 1

          # Checkout current commit SHA
          git checkout -qf ${{ github.sha }}

    - name: Set environment variables
      uses: appleboy/ssh-action@master
      with:
        host: ${{ env.SSH_HOST }}
        username: ${{ env.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        proxy_host: ${{ env.SSH_PROXY_HOST }}
        proxy_username: ${{ env.SSH_USERNAME }}
        proxy_key: ${{ secrets.SSH_PRIVATE_KEY }}
        script_stop: false
        script: |
          # Go to repository directory
          cd ${{ matrix.env }}

          # init .env
          echo "# Env file generated by container-deploy action"> .env
          # Set Docker Compose variables
          echo "DOCKER_CLIENT_TIMEOUT=360" >> .env
          echo "COMPOSE_HTTP_TIMEOUT=360" >> .env
          echo "COMPOSE_PROJECT_NAME=po" >> .env
          echo "COMPOSE_PATH_SEPARATOR=;" >> .env
          echo "COMPOSE_FILE=docker-compose.yml;docker/prod.yml" >> .env

          # Set App variables
          echo "MONGODB_CACHE_SIZE=${{ env.MONGODB_CACHE_SIZE }}" >> .env
          echo "MONGODB_HOST=${{ env.MONGODB_HOST }}" >> .env

    - name: Create Docker volumes and networks
      uses: appleboy/ssh-action@master
      with:
        host: ${{ env.SSH_HOST }}
        username: ${{ env.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        proxy_host: ${{ env.SSH_PROXY_HOST }}
        proxy_username: ${{ env.SSH_USERNAME }}
        proxy_key: ${{ secrets.SSH_PRIVATE_KEY }}
        script_stop: false
        # Note again hard-coded po_prefixes are used for now
        script: |
          docker volume create dbdata \
          || echo "dbdata volume already exists"
          docker volume create --driver=local -o type=none -o o=bind -o device=/srv/off/docker_data/redis po_redisdata
          || echo "redisdata volume already exists"
          docker network create --driver=bridge --subnet="172.30.0.0/16" po_webnet \
          || echo "webnet network already exists"      

    - name: Start services
      uses: appleboy/ssh-action@master
      with:
        host: ${{ env.SSH_HOST }}
        username: ${{ env.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        proxy_host: ${{ env.SSH_PROXY_HOST }}
        proxy_username: ${{ env.SSH_USERNAME }}
        proxy_key: ${{ secrets.SSH_PRIVATE_KEY }}
        command_timeout: 15m
        script_stop: false
        script: |
          cd ${{ matrix.env }}
          docker compose up

    - name: Check services are up
      uses: appleboy/ssh-action@master
      if: ${{ always() }}
      with:
        host: ${{ env.SSH_HOST }}
        username: ${{ env.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        proxy_host: ${{ env.SSH_PROXY_HOST }}
        proxy_username: ${{ env.SSH_USERNAME }}
        proxy_key: ${{ secrets.SSH_PRIVATE_KEY }}
        script_stop: false
        script: |
          cd ${{ matrix.env }} && \
          make livecheck

    - name: Cleanup obsolete Docker objects
      uses: appleboy/ssh-action@master
      if: ${{ always() }}
      with:
        host: ${{ env.SSH_HOST }}
        username: ${{ env.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        proxy_host: ${{ env.SSH_PROXY_HOST }}
        proxy_username: ${{ env.SSH_USERNAME }}
        proxy_key: ${{ secrets.SSH_PRIVATE_KEY }}
        script_stop: false
        script: |
          cd ${{ matrix.env }} && \
          make prune
